
package vista;
//import vista.;

import controlador.controladorPersona;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import java.sql.PreparedStatement;
import modelo.ConexionBD;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.IntStream;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import static modelo.ConexionBD.conexion;
import modelo.Persona;
import static vista.Index.menuP;
import static vista.Index.panelGeneral;
import static vista.Index.panelSecundario;
import static vista.Index.vCajaNombre;
import static vista.Index.vRegistro;
import org.mindrot.jbcrypt.BCrypt;// libreria para Encriptar



/**
 *
 * @author ADMON
 */
public class Registro extends javax.swing.JInternalFrame {

//    Varibles globales o objetos ;
    public static CrearCuenta crearCuenta;
    controladorPersona registroControlador;
    public static AreaAdministracion unAreaADM;
    Registro unRegistro;
    CrearCuenta unaPrueba;
    byte[] contrasenaHash;
    
    private int idPersona;
    private String nombrePersona;
    private String identificacionPersona;
    private String documentoPersona;
    private String correoPersona;
    private String contrasenaPersona;
    private int idTipoPersona;
    private char[] cadenaContrasena;
    private String nombreP;
    private String contrasenaF;
    private String contrasenaEncriptada;
    private  ResultSet resultadoDatos;
    
    
    private  JComboBox menuOpcion;
    
//   Getter y setter
    
    public int getIdPersona() {
        return idPersona;
    }

    public void setIdPersona(int idPersona) {
        this.idPersona = idPersona;
    }

    public String getNombrePersona() {
        return nombrePersona;
    }

    public void setNombrePersona(String nombrePersona) {
        this.nombrePersona = nombrePersona;
    }
  

    public String getCorreoPersona() {
        return correoPersona;
    }

    public void setCorreoPersona(String correoPersona) {
        this.correoPersona = correoPersona;
    }

    public String getContrasenaPersona() {
        return contrasenaPersona;
    }

    public void setContrasenaPersona(String contrasenaPersona) {
        this.contrasenaPersona = contrasenaPersona;
    }

    public int getIdTipoPersona() {
        return idTipoPersona;
    }

    public void setIdTipoPersona(int idTipoPersona) {
        this.idTipoPersona = idTipoPersona;
    }
    
    
    // 
    public Registro() {
        
        initComponents();
        this.setBounds(600, 70, 500, 600);
        propiedadesExtras();
        cargarMetodos();
    }

  
    private void propiedadesExtras() {
        panelRegistro.setComponentZOrder(menuRegistro, 0);
    }

    private void cargarMetodos() {
        imgsRegistro();
    }

    private void imgsRegistro() {

        //logo 
        ImageIcon importarImg = (new ImageIcon("imgs/logoQ1.png"));
        JLabel logoImg = new JLabel();
        logoImg.setIcon(new ImageIcon(importarImg.getImage().getScaledInstance(60, 60, Image.SCALE_SMOOTH)));
        logoImg.setBounds(84, 28, 68, 68);
        panelRegistro.add(logoImg);
        panelRegistro.setComponentZOrder(logoImg, 0);

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        panelRegistro = new javax.swing.JPanel();
        menuRegistro = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtEmailDocumento = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnIngresar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        vCrearCuenta = new javax.swing.JLabel();
        vSuperOfertas = new javax.swing.JLabel();
        vSuperOfertas1 = new javax.swing.JLabel();
        vDatosInvalidos = new javax.swing.JLabel();
        txtContrasena = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();

        jLabel5.setText("jLabel5");

        setClosable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        panelRegistro.setBackground(new java.awt.Color(255, 255, 255));

        menuRegistro.setBackground(new java.awt.Color(55, 146, 232));

        jLabel1.setFont(new java.awt.Font("PT Sans Narrow", 0, 68)); // NOI18N
        jLabel1.setText("Farmacit");

        javax.swing.GroupLayout menuRegistroLayout = new javax.swing.GroupLayout(menuRegistro);
        menuRegistro.setLayout(menuRegistroLayout);
        menuRegistroLayout.setHorizontalGroup(
            menuRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuRegistroLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(117, 117, 117))
        );
        menuRegistroLayout.setVerticalGroup(
            menuRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuRegistroLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );

        jLabel2.setFont(new java.awt.Font("PT Sans Narrow", 1, 26)); // NOI18N
        jLabel2.setText("Ingresar a tu cuenta ");

        txtEmailDocumento.setFont(new java.awt.Font("PT Sans Narrow", 0, 18)); // NOI18N
        txtEmailDocumento.setText("   Email o numero de identificacion");
        txtEmailDocumento.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("PT Sans Narrow", 1, 20)); // NOI18N
        jLabel3.setText("¿Olvido la contraseña?");

        btnIngresar.setBackground(new java.awt.Color(0, 102, 255));
        btnIngresar.setFont(new java.awt.Font("PT Sans Narrow", 0, 20)); // NOI18N
        btnIngresar.setText("Ingresar");
        btnIngresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnIngresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnIngresarMouseClicked(evt);
            }
        });
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("PT Sans Narrow", 0, 18)); // NOI18N
        jLabel4.setText("¿No tienes una cuenta?");

        vCrearCuenta.setFont(new java.awt.Font("PT Sans Narrow", 1, 18)); // NOI18N
        vCrearCuenta.setText("Crear una cuenta");
        vCrearCuenta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        vCrearCuenta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vCrearCuentaMouseClicked(evt);
            }
        });

        vSuperOfertas.setFont(new java.awt.Font("PT Sans Narrow", 0, 19)); // NOI18N
        vSuperOfertas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        vSuperOfertas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                vSuperOfertasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                vSuperOfertasMouseExited(evt);
            }
        });

        vSuperOfertas1.setFont(new java.awt.Font("PT Sans Narrow", 0, 19)); // NOI18N
        vSuperOfertas1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        vSuperOfertas1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                vSuperOfertas1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                vSuperOfertas1MouseExited(evt);
            }
        });

        vDatosInvalidos.setBackground(new java.awt.Color(255, 255, 255));
        vDatosInvalidos.setFont(new java.awt.Font("PT Sans Narrow", 0, 19)); // NOI18N
        vDatosInvalidos.setForeground(new java.awt.Color(249, 17, 17));
        vDatosInvalidos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        vDatosInvalidos.setEnabled(false);
        vDatosInvalidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                vDatosInvalidosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                vDatosInvalidosMouseExited(evt);
            }
        });

        txtContrasena.setToolTipText("");
        txtContrasena.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setFont(new java.awt.Font("PT Sans Narrow", 0, 14)); // NOI18N
        jLabel6.setText("Contraseña");

        javax.swing.GroupLayout panelRegistroLayout = new javax.swing.GroupLayout(panelRegistro);
        panelRegistro.setLayout(panelRegistroLayout);
        panelRegistroLayout.setHorizontalGroup(
            panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuRegistro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRegistroLayout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addGroup(panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRegistroLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(163, 163, 163))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRegistroLayout.createSequentialGroup()
                        .addComponent(vCrearCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(171, 171, 171))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRegistroLayout.createSequentialGroup()
                        .addComponent(btnIngresar)
                        .addGap(190, 190, 190))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRegistroLayout.createSequentialGroup()
                        .addComponent(vSuperOfertas, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vDatosInvalidos, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(157, 157, 157))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRegistroLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(131, 131, 131))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRegistroLayout.createSequentialGroup()
                        .addGroup(panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtEmailDocumento, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                                .addGroup(panelRegistroLayout.createSequentialGroup()
                                    .addGap(31, 31, 31)
                                    .addComponent(jLabel3))
                                .addComponent(txtContrasena)))
                        .addGap(107, 107, 107))))
            .addGroup(panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRegistroLayout.createSequentialGroup()
                    .addContainerGap(206, Short.MAX_VALUE)
                    .addComponent(vSuperOfertas1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(172, 172, 172)))
        );
        panelRegistroLayout.setVerticalGroup(
            panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRegistroLayout.createSequentialGroup()
                .addComponent(menuRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRegistroLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(vSuperOfertas)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRegistroLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vDatosInvalidos, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(txtEmailDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addGap(8, 8, 8)
                .addComponent(txtContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnIngresar)
                .addGap(18, 18, 18)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vCrearCuenta)
                .addContainerGap(62, Short.MAX_VALUE))
            .addGroup(panelRegistroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelRegistroLayout.createSequentialGroup()
                    .addGap(214, 214, 214)
                    .addComponent(vSuperOfertas1)
                    .addContainerGap(340, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelRegistro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void vCrearCuentaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vCrearCuentaMouseClicked
        // TODO add your handling code here:
//        
//        crearCuenta = new CrearCuenta();
//        panelGeneral.add(crearCuenta);
//        crearCuenta.setVisible(true);
//        this.setVisible(false);

        crearCuenta = new CrearCuenta();
        panelGeneral.add(crearCuenta);
        crearCuenta.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_vCrearCuentaMouseClicked

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed

    }//GEN-LAST:event_btnIngresarActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
//        System.out.println("clicked general");
    }//GEN-LAST:event_formMouseClicked

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        panelSecundario.setVisible(true);
//        panelGeneral.setVisible(true);
    }//GEN-LAST:event_formInternalFrameClosed
     
    private void btnIngresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnIngresarMouseClicked
       
                try {
           // Este codigo que esta a continuacion es para encriptar la contrasena con la base de datos funciona , pero no es una manera recomendable
//            String consulta = " SELECT idPersona, nombrePersona, correoPersona, contrasenaPersona, idTipoPersona FROM persona WHERE  correoPersona = ? AND  contrasenaPersona = ?";
//            PreparedStatement sentenciaSQL = ConexionBD.conexion.prepareStatement(consulta);
            // encriptar contrasena con le sha2 de la base de datos 
//                try {
//    //                  String ConsultaContrasena = " SELECT SHA2('"+Contrasena1+"',256);"; diractamente pero sin seguridad
//                        String ConsultaContrasena1 = " SELECT SHA2(?,256);";
//
//                        PreparedStatement sentenciaSQLC = ConexionBD.conexion.prepareStatement(ConsultaContrasena1);
//
//                        sentenciaSQLC.setString(1, contrasenaF);
//                        ResultSet resultadoEncriptado = sentenciaSQLC.executeQuery();
//
//                    if (resultadoEncriptado.next()) {
//                        contrasenaEncriptada = resultadoEncriptado.getString("SHA2('"+contrasenaF+"',256)"); 
//                        System.out.println("Esta es la contrasena Encriptada222 "+contrasenaEncriptada);
//                    }else{
//                        System.err.println("El resultSet no devolvio ningun Resultado");
//                    }
//                } catch (Exception e) {
//                    
//                    System.err.println("Error al encriptar la contrasena : "+e);
//                }
                    
//                       sentenciaSQL.setString(1, txtEmailDocumento.getText()); // se preparan los datos y da mas seguridad de esta manera se evitan inyeciones, pasarle la consulta directamente es mas vulnerable
//                    sentenciaSQL.setString(2, contrasenaEncriptada);// esto mismo se puede hacer con los getters y setter que es mas seguro;
//                    ResultSet resultSet = sentenciaSQL.executeQuery();
            //
//            if (resultSet.next()) {
//            } else {
//
//                // No se encontraron registros válidos en el conjunto de resultados el resultSet es elque recibe los datos lo mismo de un resultado
//                // Las credenciales no son válidas o no hay registros que cumplan la condición
//                // Realiza las acciones correspondientes en este caso
//                // ...
//                System.out.println("No hay Registro que concidan en la base de datos pero se hace con el documento ");
//                
//                String consulta2 = " SELECT idPersona, nombrePersona, identificacionPersona, correoPersona, contrasenaPersona, idTipoPersona FROM persona WHERE  identificacionPersona = ? AND  contrasenaPersona = ? ";
//
//                
//                PreparedStatement sentenciaSQL2 = ConexionBD.conexion.prepareStatement(consulta2);
//                sentenciaSQL2.setString(1, txtEmailDocumento.getText()); // se preparan los datos y da mas seguridad de esta manera se evitan inyeciones, pasarle la consulta directamente es mas vulnerable
//                sentenciaSQL2.setString(2, contrasenaF);// esto mismo se puede hacer con los getters y setter que es mas seguro;
//                //getPasword
//                ResultSet resultadoSQL = sentenciaSQL2.executeQuery();
//                
//                if (resultadoSQL.next()) {
//                    
//                   idPersona = resultadoSQL.getInt("idPersona");
//                   nombrePersona = resultadoSQL.getString("nombrePersona");
//                   correoPersona = resultadoSQL.getString("correoPersona");
//                   contrasenaPersona = resultadoSQL.getString("contrasenaPersona");
//                   idTipoPersona= resultadoSQL.getInt("idTipoPersona");
//                
//                   guardarDatos();
//                   
//                   System.out.println("Hay un registro en la base de datos que coincide con el documento");
//                    
//                }else{
//                    vDatosInvalidos.setText("Datos invalidos");
//                    vDatosInvalidos.setEnabled(true);
//                
//                }
//                
//                resultadoSQL.close();// con variable boolean hacer que cuando dentre a if a verificar si sigue en false ponerla en true y solamente se mostrara 1 si esta en true 
//                sentenciaSQL2.close();   
//            }
//
//            resultSet.close();
//            sentenciaSQL.close();
//                  crear una consulta donde tome el documento y correo y que traiga el hashed para verificarlo con hash generado a partir del usuario 
                   
                  
                    cadenaContrasena = txtContrasena.getPassword(); //conversion y al ves la contrasena del usuario
                    contrasenaF = new String(cadenaContrasena);
                     
                    String ConsultaCorreo= " SELECT idPersona, nombrePersona, identificacionPersona, correoPersona, contrasenaPersona, idTipoPersona  FROM persona WHERE correoPersona = ? ;"; // sino sirve con esta crear otra
                    PreparedStatement sentenciaSQLCorreo = ConexionBD.conexion.prepareStatement(ConsultaCorreo);
                    
                    
                    correoPersona = txtEmailDocumento.getText();// correo del usuario
                    sentenciaSQLCorreo.setString(1,correoPersona);
                    resultadoDatos = sentenciaSQLCorreo.executeQuery();
                    
                    if (resultadoDatos.next()) {// no hay  necesidad de utilzar el next pero pues por obligacion se hizo
                        System.out.println("el correo si coincide en la base de datos");
                         
                        contrasenaEncriptada = resultadoDatos.getString("contrasenaPersona");// en este caso solo se le pasa la contrasena ya encriptada que viene de la base de datos
                        verificarEncriptacionContrasena();//metodo para combrobar si la contrasena son iguales o no el contexto de encriptacion y teniendo en cuenta la contrasena de la base de datos y la contrasena del usuario
                        
                    }else{
                        System.out.println("no hay un dato que coincida en la base de datos por parte del correo y se hace con el documento ");
                        
//                         vDatosInvalidos.setText("Datos invalidos");
//                         vDatosInvalidos.setEnabled(true);
//                         vDatosInvalidos.setHorizontalAlignment(SwingConstants.CENTER); 
                         
                       String consultaDocumento = " SELECT idPersona, nombrePersona, identificacionPersona, correoPersona, contrasenaPersona, idTipoPersona  FROM persona WHERE identificacionPersona = ? ;"; // sino sirve con esta crear otra
                            
                       PreparedStatement sentenciaSQLDocumento = ConexionBD.conexion.prepareStatement(consultaDocumento);
                       documentoPersona = txtEmailDocumento.getText();// documento del usuario
                       sentenciaSQLDocumento.setString(1,documentoPersona);
                       resultadoDatos = sentenciaSQLDocumento.executeQuery();
                       
                        if (resultadoDatos.next()) {
                            
                            System.out.println("se hace la comprobacion con la documento de la persona ");
                            contrasenaEncriptada = resultadoDatos.getString("contrasenaPersona");// en este caso solo se le pasa la contrasena ya encriptada que viene de la base de datos
                            verificarEncriptacionContrasena();
                            System.out.println("no hay ningun dato que coincida con la base de datos ");
                            
                            
                        }else{
                            
                             vDatosInvalidos.setText("Datos invalidos");
                             vDatosInvalidos.setEnabled(true);
                             vDatosInvalidos.setHorizontalAlignment(SwingConstants.CENTER);
                        }
                        
                        resultadoDatos.close();// mirar nose si es el objeto o la libreria
                        sentenciaSQLDocumento.close();
                        sentenciaSQLCorreo.close();
                    }
        } catch (SQLException error) {
            System.out.println("eror sql = " + error);
        }
        System.out.println(nombrePersona+"soy el el nombre de la persona de la variable ");
    }//GEN-LAST:event_btnIngresarMouseClicked
    
    private void verificarEncriptacionContrasena(){
        
                    try {
                        if (BCrypt.checkpw(contrasenaF, contrasenaEncriptada)) { // en este caso se le pasa la contrasena en texto claro para que el metodo haga la respectiva encriptacion y compare el hashed de la base de datos con el hash generado por parte del usuario en la otra vista
                            
                            System.out.println("Si Coincide con la contrasena que esta en la base de datos");
                            System.out.println("PUEDE INICIAR SESION");
                            
                            System.out.println(" Si hay un Registro que concide en la base de datos");
                            idPersona = resultadoDatos.getInt("idPersona");
                            nombrePersona = resultadoDatos.getString("nombrePersona");
                            identificacionPersona = resultadoDatos.getString("identificacionPersona");
                            correoPersona = resultadoDatos.getString("correoPersona");
                            contrasenaPersona = resultadoDatos.getString("contrasenaPersona");
                            idTipoPersona= resultadoDatos.getInt("idTipoPersona");
                            System.out.println("1");
                            guardarDatos();
                            System.out.println("2");
                            // Obtener el modelo de datos del JComboBox
            //                ComboBoxModel<String> comboBoxModel = cajaOpcion.getModel();
                            // si hay una persona ya con inicio de session mandar un mensaje y que diga primero debes cerar cession y hay si dejar entrar con otro.
                            
                            
                        } else {
                            System.out.println("las contrasenas no son iguales");
                            vDatosInvalidos.setText("contrasena incorreta");
                            vDatosInvalidos.setEnabled(true);
                        }
            
                    } catch (Exception error) {
                        
                        System.out.println("Error al comprobar la contrasena : "+error);

                    }  
    }
    
    public void guardarDatos(){

        System.out.println(idPersona+"---"+nombrePersona+"----"+correoPersona + "-----" +contrasenaPersona+"--"+idTipoPersona);
        this.dispose();
//      this.setVisible(false);
        panelSecundario.setVisible(true);


        // asignamiento de los datos traidos a los getter y setter .

        unRegistro = new Registro ();
        unRegistro.setIdPersona(idPersona);
        unRegistro.setNombrePersona(nombrePersona);
        unRegistro.setCorreoPersona(correoPersona);
        unRegistro.setContrasenaPersona(contrasenaPersona);
        unRegistro.setIdTipoPersona(idTipoPersona);

        nombreP = unRegistro.getNombrePersona();

        vCajaNombre.enable(true); // creo que esta era para probar el codigo 
//                menuP.remove(vRegistro);
        vRegistro.setVisible(false);


        // se instacia un combo box 
        menuOpcion = new javax.swing.JComboBox<>();
        menuOpcion.setBackground(new java.awt.Color(248, 247, 247));
        menuOpcion.setFont(new java.awt.Font("PT Sans Narrow", 0, 16)); // NOI18N
        menuOpcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {unRegistro.getNombrePersona(), "Perfil", "Cerrar sesion" }));
        menuOpcion.setCursor( new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR){});// cursor de mano
        menuOpcion.setBounds(1378, 49, 95, 30);
//                menuOpcion.getElementAt(2).setEnabled(false);

        menuP.add(menuOpcion);
        menuP.revalidate();
        menuP.repaint();

        if(idTipoPersona==3){//asea si es administrador

            menuOpcion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {nombreP,"Perfil", "Administracion", "Cerrar sesion" }));

        }
        System.out.println("item escogido: "+menuOpcion.getSelectedItem());


       menuOpcion.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {

                String opcion = (String) menuOpcion.getSelectedItem();

                switch (opcion) {
                    case "Perfil":
                        System.out.println("Fui escogido Perfil");
                        break;

                    case "Administracion":
                        abrirVentanaAdministracion();
                        break;

                    case "Cerrar sesion":
                        cerrarSession();
                        break;
                }
            }
        });
    }
    
    
    
    
    
    
    
    
    private void vSuperOfertasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vSuperOfertasMouseEntered
        // TODO add your handling code here:
        vSuperOfertas.setForeground(Color.white);
    }//GEN-LAST:event_vSuperOfertasMouseEntered

    private void vSuperOfertasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vSuperOfertasMouseExited
        // TODO add your handling code here:
        vSuperOfertas.setForeground(Color.black);
    }//GEN-LAST:event_vSuperOfertasMouseExited

    private void vSuperOfertas1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vSuperOfertas1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_vSuperOfertas1MouseEntered

    private void vSuperOfertas1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vSuperOfertas1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_vSuperOfertas1MouseExited

    private void vDatosInvalidosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vDatosInvalidosMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_vDatosInvalidosMouseEntered

    private void vDatosInvalidosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vDatosInvalidosMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_vDatosInvalidosMouseExited
     
    private void abrirVentanaAdministracion(){
        
        unAreaADM = new AreaAdministracion();
        panelSecundario.setVisible(false);
        unAreaADM.setVisible(true);
        panelGeneral.add(unAreaADM);
    };
    
    private void cerrarSession(){
    
           unRegistro.setIdPersona(0);
           unRegistro.setNombrePersona(null);
           unRegistro.setCorreoPersona(null);
           unRegistro.setContrasenaPersona(null);
           unRegistro.setIdTipoPersona(0);
           
           idPersona=0;
           nombrePersona=null;
           correoPersona=null;
           contrasenaPersona=null;
           idTipoPersona=0;
           
           nombreP=null;
           contrasenaF=null;
           txtEmailDocumento=null;
           txtContrasena=null;
           actualizarIndex();
           
//           int a= unRegistro.getIdPersona();
//           String b = unRegistro.getNombrePersona();
//           String c = unRegistro.getCorreoPersona();
//           String d = unRegistro.getContrasenaPersona();
//           int e = unRegistro.getIdTipoPersona();
//
//           System.out.println(a+"---"+b+"---"+c+"---"+d+"---"+e+"\n------");
//           System.out.println(idPersona+"---"+nombrePersona+"---"+correoPersona+"---"+contrasenaPersona+"---"+idTipoPersona);
//       
//           for (char f : cadenaContrasena) {
//               
//                System.out.println("["+f+"]");
//           }
//          
//           System.out.println(nombreP+"soy el nombreP");
//           System.out.println(contrasenaF+"soy la contrasena");
//             System.out.println(txtEmailDocumento);
//             System.out.println(txtContrasena);
    }
    
    private void actualizarIndex(){
        
        // se remueve JComboBox actual 
        menuP.remove(menuOpcion);
        menuP.revalidate();
        menuP.repaint();
        vRegistro.setVisible(true);
        
        // se vuelve a crear el mismo Jlabel que estaba en la pantalla de inicio , crei que no funcionaba con el setVisible pero si funciona 
//        JLabel vRegistro;
//        vRegistro = new javax.swing.JLabel();
//        vRegistro.setFont(new java.awt.Font("PT Sans Narrow", 0, 19)); // NOI18N
//        vRegistro.setText("Registro");
//        vRegistro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
//        vRegistro.setBounds(1400,49,53,26);
//        
//        menuP.add(vRegistro);
//        menuP.revalidate();
//        menuP.repaint();

//        vRegistro.addMouseListener(new java.awt.event.MouseAdapter() {
//            public void mouseClicked(java.awt.event.MouseEvent evt) {
//                vRegistroMouseClicked(evt);
//            }
//            public void mouseEntered(java.awt.event.MouseEvent evt) {
//                vRegistroMouseEntered(evt);
//            }
//            public void mouseExited(java.awt.event.MouseEvent evt) {
//                vRegistroMouseExited(evt);
//            }
//        });
//               
       // tabla de Famarcias --
       
       
       // crear una cuenta y con la cuenta de admin cambiarle a administrador dentro de la propia cuenta 
       // solucionar el error donde se puede iniciar una session dentro de otra mandar un mensaje donde diga : "debes cerar session primero antes de volver a iniciar otra" algo asi 
      
           
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIngresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel menuRegistro;
    private javax.swing.JPanel panelRegistro;
    private javax.swing.JPasswordField txtContrasena;
    private javax.swing.JTextField txtEmailDocumento;
    private javax.swing.JLabel vCrearCuenta;
    private javax.swing.JLabel vDatosInvalidos;
    private javax.swing.JLabel vSuperOfertas;
    private javax.swing.JLabel vSuperOfertas1;
    // End of variables declaration//GEN-END:variables
}
