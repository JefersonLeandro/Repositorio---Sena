/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import controlador.controladorProducto;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Iterator;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;
import modelo.ConexionBD;
import modelo.Producto;
import vista.AreaAdministracion;
import static vista.AreaAdministracion.ventanaProducto;
import static vista.Index.panelGeneral;
import static vista.Index.panelSecundario;
import static vista.Registro.unAreaADM;

/**
 *
 * @author ADMON
 */
public class DatosProducto extends javax.swing.JInternalFrame {
    
    //    objetos Globales
    controladorProducto controlarProducto = new controladorProducto();
    DefaultTableModel tabla;
    DatosMarcaProducto ventanaMarca;
  

    
    private int idMarcaProducto;
    private String nombreMarca;
    boolean banderaRelacion = false;
    private int primerCaracterID;
    /**
     * Creates new form DatosProducto
     */
    public DatosProducto() {
        initComponents();
        cargarMetodos();
    }
    
    private void cargarMetodos (){
        funcionesExtras();
        agregarImgs();
        llenarCCBIdMarcaProducto();
        llenarTablaProducto();
    };
    
     private void agregarImgs() {
        // icono de la persona a la  izquierda
        
        ImageIcon importarIconoC = (new ImageIcon("imgs/cajas.png"));
        JLabel cajasImg =new JLabel();
        cajasImg.setIcon(new ImageIcon(importarIconoC.getImage().getScaledInstance(50,50, Image.SCALE_SMOOTH)));
        cajasImg.setBounds(130,38,50,50);
        panelProducto.add(cajasImg);
        
        // icono del logo abajo
        ImageIcon importarIcono2 = (new ImageIcon("imgs/logoQ1.png"));
        JLabel logoF =new JLabel();
        logoF.setIcon(new ImageIcon(importarIcono2.getImage().getScaledInstance(32,32, Image.SCALE_SMOOTH)));
        logoF.setBounds(740,743,32,32);
        panelProducto.add(logoF);
        
        // icono de la flecha a la izquierda
        ImageIcon importarFlecha = (new ImageIcon("imgs/flechaIzq.png"));
        JLabel iconoFlecha = new JLabel();
        iconoFlecha.setIcon(new ImageIcon(importarFlecha.getImage().getScaledInstance(33,33, Image.SCALE_SMOOTH)));
        iconoFlecha.setBounds(20,25,33,33);
        iconoFlecha.setCursor( new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR){});// curso de la mano
        panelProducto.add(iconoFlecha);
        
        //eventos de escucha de la imagen registro
        
        iconoFlecha.addMouseListener(new MouseAdapter() {
            
            @Override
            public void mouseClicked(MouseEvent e) {
                retornarAreaAdministracion();    
            }
        }
        );
    }
     
     private void funcionesExtras(){
        
       this.setBounds(30, 6, this.getWidth(), this.getHeight());
       spinnerId.setVisible(false);// cambiar 
       btnModificar.setEnabled(false);
       btnEliminar.setEnabled(false);
       
    }
    
    private void retornarAreaAdministracion(){
        this.setVisible(false);
        unAreaADM.setVisible(true);
    }
    
    
    private void llenarCCBIdMarcaProducto() {
        // cuando se esta haciendo una consulta a la base de datos el sistema obliga a poner un try a catch para manejar la parte de los errores de la consulta
        try {
            
            String consulta = "SELECT idMarcaProducto, nombreMarca from marcaProducto"; 
    
            PreparedStatement sentenciaSQL = ConexionBD.conexion.prepareStatement(consulta); // se envia los  datos a la base de datos para hacer la consulta
            ResultSet resultSet = sentenciaSQL.executeQuery();
         
            // llegan los datos de uno en uno  y a la misma vez va llenando el JcomboBox
            while(resultSet.next()){ // mientras haiga otro resultado en la base de datos repita y haga lo mismo 

                    idMarcaProducto = resultSet.getInt("idMarcaProducto");
                    nombreMarca = resultSet.getString("nombreMarca");
                    cbbIdMarcaProducto.addItem(idMarcaProducto+". "+nombreMarca);// se agrega directamente lo que trajo el resultado de la consulta
            }
            
            
        } catch (Exception error) {
            System.out.println("Error con la consulta : "+error);
        }
    }
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelProducto = new javax.swing.JPanel();
        vSuperOfertas = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        txtNombreProducto = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtDescripcionUnidad = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDescripcionProductoGeneral = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtStockProducto = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnInsertar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        labelFarmacit = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        txtBuscar = new javax.swing.JTextField();
        spinnerId = new javax.swing.JSpinner();
        btnBuscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaDatosProducto = new javax.swing.JTable();
        txtPrecioProducto = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cbbIdMarcaProducto = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        txtImagenProducto = new javax.swing.JTextField();
        tablasRelacionales = new javax.swing.JLabel();

        setClosable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        panelProducto.setBackground(new java.awt.Color(255, 255, 255));

        vSuperOfertas.setFont(new java.awt.Font("PT Sans Narrow", 0, 35)); // NOI18N
        vSuperOfertas.setText("Productos");
        vSuperOfertas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        vSuperOfertas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                vSuperOfertasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                vSuperOfertasMouseExited(evt);
            }
        });

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        jLabel6.setFont(new java.awt.Font("PT Sans Narrow", 0, 22)); // NOI18N
        jLabel6.setText("nombreProducto");

        txtNombreProducto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtNombreProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreProductoActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("PT Sans Narrow", 0, 22)); // NOI18N
        jLabel10.setText("descripcionUnidad");

        txtDescripcionUnidad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDescripcionUnidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescripcionUnidadActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("PT Sans Narrow", 0, 22)); // NOI18N
        jLabel7.setText("descripcionProductoG");

        txtDescripcionProductoGeneral.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDescripcionProductoGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescripcionProductoGeneralActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("PT Sans Narrow", 0, 22)); // NOI18N
        jLabel8.setText("stockProducto");

        txtStockProducto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtStockProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStockProductoActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("PT Sans Narrow", 0, 22)); // NOI18N
        jLabel9.setText("MarcaProducto");

        btnInsertar.setBackground(new java.awt.Color(0, 102, 255));
        btnInsertar.setFont(new java.awt.Font("PT Sans Narrow", 0, 18)); // NOI18N
        btnInsertar.setText("Insertar");
        btnInsertar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInsertar.setName("Registrar"); // NOI18N
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });

        btnLimpiar.setBackground(new java.awt.Color(0, 102, 255));
        btnLimpiar.setFont(new java.awt.Font("PT Sans Narrow", 0, 18)); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(0, 102, 255));
        btnEliminar.setFont(new java.awt.Font("PT Sans Narrow", 0, 18)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setToolTipText("");
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.setName("Eliminar"); // NOI18N
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModificar.setBackground(new java.awt.Color(0, 102, 255));
        btnModificar.setFont(new java.awt.Font("PT Sans Narrow", 0, 18)); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("PT Sans Narrow", 0, 24)); // NOI18N
        jLabel11.setText("Ingresar un producto");

        labelFarmacit.setFont(new java.awt.Font("PT Sans Narrow", 0, 30)); // NOI18N
        labelFarmacit.setText("Farmacit");
        labelFarmacit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelFarmacit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                labelFarmacitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                labelFarmacitMouseExited(evt);
            }
        });

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(18, 13, 13));

        jSeparator5.setForeground(new java.awt.Color(0, 0, 0));

        txtBuscar.setFont(new java.awt.Font("PT Sans Narrow", 0, 18)); // NOI18N
        txtBuscar.setText("  Buscar un producto");
        txtBuscar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        spinnerId.setEnabled(false);

        btnBuscar.setText("buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tablaDatosProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "idProducto", "nombreProducto", "descripcionUnidad", "descripcionProductoGeneral", "StockProducto", "precioProducto", "imagenProducto", "idTipoPersona"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaDatosProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaDatosProductoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaDatosProducto);

        txtPrecioProducto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtPrecioProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioProductoActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("PT Sans Narrow", 0, 22)); // NOI18N
        jLabel12.setText("precioProducto");

        jLabel13.setFont(new java.awt.Font("PT Sans Narrow", 0, 22)); // NOI18N
        jLabel13.setText("nombreImagen");

        cbbIdMarcaProducto.setBackground(new java.awt.Color(255, 248, 253));
        cbbIdMarcaProducto.setFont(new java.awt.Font("PT Sans Narrow", 0, 14)); // NOI18N
        cbbIdMarcaProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona" }));
        cbbIdMarcaProducto.setBorder(null);
        cbbIdMarcaProducto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jButton1.setFont(new java.awt.Font("PT Sans Narrow", 0, 14)); // NOI18N
        jButton1.setText(" Seleccionar >>");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtImagenProducto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtImagenProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtImagenProductoActionPerformed(evt);
            }
        });

        tablasRelacionales.setFont(new java.awt.Font("PT Sans Narrow", 0, 18)); // NOI18N
        tablasRelacionales.setText("- Tabla Marcas de productos");
        tablasRelacionales.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tablasRelacionales.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablasRelacionalesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tablasRelacionalesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tablasRelacionalesMouseExited(evt);
            }
        });

        javax.swing.GroupLayout panelProductoLayout = new javax.swing.GroupLayout(panelProducto);
        panelProducto.setLayout(panelProductoLayout);
        panelProductoLayout.setHorizontalGroup(
            panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProductoLayout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(vSuperOfertas)
                .addGap(109, 109, 109)
                .addComponent(tablasRelacionales)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscar)
                .addGap(192, 192, 192))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProductoLayout.createSequentialGroup()
                .addContainerGap(111, Short.MAX_VALUE)
                .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProductoLayout.createSequentialGroup()
                        .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelProductoLayout.createSequentialGroup()
                                .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panelProductoLayout.createSequentialGroup()
                                        .addComponent(spinnerId, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(57, 57, 57)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtImagenProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelProductoLayout.createSequentialGroup()
                                        .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProductoLayout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addGap(22, 22, 22))
                                            .addComponent(txtNombreProducto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(85, 85, 85)
                                        .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtDescripcionUnidad, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProductoLayout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addGap(37, 37, 37)))))
                                .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelProductoLayout.createSequentialGroup()
                                        .addGap(68, 68, 68)
                                        .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtDescripcionProductoGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(panelProductoLayout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addGap(19, 19, 19))))
                                    .addGroup(panelProductoLayout.createSequentialGroup()
                                        .addGap(86, 86, 86)
                                        .addComponent(cbbIdMarcaProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(62, 62, 62))
                            .addGroup(panelProductoLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(144, 144, 144)
                                .addComponent(jLabel9)
                                .addGap(103, 103, 103)))
                        .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProductoLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(90, 90, 90))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProductoLayout.createSequentialGroup()
                                .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(panelProductoLayout.createSequentialGroup()
                                            .addComponent(btnModificar)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnLimpiar))
                                        .addGroup(panelProductoLayout.createSequentialGroup()
                                            .addComponent(btnInsertar)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnEliminar)))
                                    .addComponent(txtStockProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(64, 64, 64)))
                        .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrecioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelProductoLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel12)))
                        .addGap(176, 176, 176))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProductoLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProductoLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(649, 649, 649))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProductoLayout.createSequentialGroup()
                        .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1363, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 1363, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProductoLayout.createSequentialGroup()
                        .addComponent(labelFarmacit)
                        .addGap(663, 663, 663))))
            .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProductoLayout.createSequentialGroup()
                    .addContainerGap(79, Short.MAX_VALUE)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 1367, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(55, 55, 55)))
        );
        panelProductoLayout.setVerticalGroup(
            panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelProductoLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelProductoLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vSuperOfertas, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tablasRelacionales, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBuscar)))
                .addGap(62, 62, 62)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelProductoLayout.createSequentialGroup()
                        .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelProductoLayout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtStockProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtDescripcionProductoGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtDescripcionUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPrecioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(25, 25, 25)
                        .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbbIdMarcaProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtImagenProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelProductoLayout.createSequentialGroup()
                                .addComponent(spinnerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13))))
                    .addGroup(panelProductoLayout.createSequentialGroup()
                        .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnInsertar)
                            .addComponent(btnEliminar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnModificar)
                            .addComponent(btnLimpiar))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelFarmacit, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(panelProductoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelProductoLayout.createSequentialGroup()
                    .addGap(92, 92, 92)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(684, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void vSuperOfertasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vSuperOfertasMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_vSuperOfertasMouseEntered

    private void vSuperOfertasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vSuperOfertasMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_vSuperOfertasMouseExited

    private void txtNombreProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreProductoActionPerformed

    private void txtDescripcionUnidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescripcionUnidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionUnidadActionPerformed

    private void txtDescripcionProductoGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescripcionProductoGeneralActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionProductoGeneralActionPerformed

    private void txtStockProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStockProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStockProductoActionPerformed

    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarActionPerformed
        tabla.setRowCount(0);
        controlarProducto.controlarAccion(evt, obtenerProducto());
        System.out.println("Dentre al boton ingresar");
        llenarTablaProducto();
        limpiarDatosPersona();

    }//GEN-LAST:event_btnInsertarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarDatosPersona();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        controlarProducto.controlarAccion(evt, obtenerProducto());
        limpiarDatosPersona();
        tabla.setRowCount(0);
        llenarTablaProducto();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        controlarProducto.controlarAccion(evt, obtenerProducto());
        limpiarDatosPersona();
        tabla.setRowCount(0);
        llenarTablaProducto();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void labelFarmacitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelFarmacitMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_labelFarmacitMouseEntered

    private void labelFarmacitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelFarmacitMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_labelFarmacitMouseExited

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        llenarTablaConBusqueda(txtBuscar.getText());
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void tablaDatosProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaDatosProductoMouseClicked
        // TODO add your handling code here:

//        Farmacia estaFarmacia =new Farmacia();
        if (evt.getClickCount()==2) {
            int fila = tablaDatosProducto.rowAtPoint(evt.getPoint());
            
            //conversion de datos de int , float a string;
            
            int cantidad = (int) tablaDatosProducto.getValueAt(fila,4);
                String StockFinal = Integer.toString(cantidad); 
            float precio = (float) tablaDatosProducto.getValueAt(fila,5);
                String precioProductoFinal = Float.toString(precio); 

            if(fila > -1){

                spinnerId.setValue((Integer) tablaDatosProducto.getValueAt(fila,0));
                txtNombreProducto.setText(((String) tablaDatosProducto.getValueAt(fila,1)));
                txtDescripcionUnidad.setText((String) tablaDatosProducto.getValueAt(fila,2));
                txtDescripcionProductoGeneral.setText((String) tablaDatosProducto.getValueAt(fila,3));
                txtStockProducto.setText((String) StockFinal); // se hace la debida conversion 
                txtPrecioProducto.setText((String) precioProductoFinal);
                txtImagenProducto.setText((String) tablaDatosProducto.getValueAt(fila,6));
//                cbbIdMarcaProducto.setSelectedIndex((int) tablaDatosProducto.getValueAt(fila, 7));

                // CREO QUE HACIENDO LO CON OBJETOS COMO ESTA EN LA GUIA SE PODRIA SELECIONAR LA OPCION DE MANERA MAS FACIL LA MANERA RECOMENDADA DE HACERLO ES CON OBJETOS RECUERDE Y NO CON CADENAS ANQUE TAMBIEN SE PUEDE TRABAJAR COMO YO LO HIZE 

                int itemCount = cbbIdMarcaProducto.getItemCount();
                int idMPTabla = (int) tablaDatosProducto.getValueAt(fila, 7);
                for (int i = 0; i < itemCount; i++) {
                    String opcion = (String) cbbIdMarcaProducto.getItemAt(i);
                    System.out.println(opcion);
                    
                    // extrer el numero de la cadena de texto del comboBOX
                     Pattern pattern = Pattern.compile("\\d+"); // Expresión regular para encontrar uno o más dígitos
                     Matcher matcher = pattern.matcher(opcion);
            
                    while (matcher.find()) {

                        String numeroFinal = matcher.group();
                        System.out.println("Valor numérico encontrado: " + numeroFinal);
                        int castiarNumero = (int) Integer.parseInt(numeroFinal);
                        
                        if (idMPTabla==castiarNumero) {
                            
                            System.out.println("somos iguales ");
                            cbbIdMarcaProducto.setSelectedItem(cbbIdMarcaProducto.getItemAt(i));
                        } else {
                            
                            System.out.println("ninguno fue igual ");
                            
                        }   
                    }   
                }
                // este caso tengo que asignarle el numero que esta en la tabla al jCombo
                btnModificar.setEnabled(true);
                btnEliminar.setEnabled(true);

                System.out.println("dentre a la funcion llenar la tabla con dos click");
                //                BTNModificar.setVisible(true);
                //                BTNModificar.seetrue);
        }//   17/10/2024 tenemos dos anos para para la practica enviar correo en el momento de entrar a practicas tiene que enviar un correo al sena para pedir instructor de seguimiento.
        // el id se esta pasando como cero hay que crear un objeto de la clase farmacia y traerlo y asinarselo ahi o mirar como lo hace en la guia
        }
    }//GEN-LAST:event_tablaDatosProductoMouseClicked

    private void txtPrecioProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioProductoActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
         panelSecundario.setVisible(true);
    }//GEN-LAST:event_formInternalFrameClosed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
       // Crear un cuadro de diálogo para seleccionar el archivo de JFileChooser
        JFileChooser fileChooser = new JFileChooser();

        // Mostrar el cuadro de diálogo y obtener la respuesta del usuario
        int returnValue = fileChooser.showOpenDialog(null);
        
        // Comprobar si el usuario seleccionó un archivo
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            // Obtener el archivo seleccionado por el usuario
            File selectedFile = fileChooser.getSelectedFile();
            
            // Obtener el nombre de la imagen
            String nombreImagen = selectedFile.getName();
            
            if (nombreImagen!=null) {
                txtImagenProducto.setText(nombreImagen); // si tiene algo la variable nombreImagen al textFiel le asigna el nombre obtenidad
            }

            // mostrar el nombre de la imagen
            System.out.println("nombre de la imagen seleccionada: " + nombreImagen);
            
        } else {
            System.out.println("Ninguna archivo fue seleccionado.");
        }
    
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtImagenProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtImagenProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtImagenProductoActionPerformed

    private void tablasRelacionalesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablasRelacionalesMouseEntered
        tablasRelacionales.setForeground(Color.blue);
    }//GEN-LAST:event_tablasRelacionalesMouseEntered

    private void tablasRelacionalesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablasRelacionalesMouseExited
        tablasRelacionales.setForeground(Color.black);
    }//GEN-LAST:event_tablasRelacionalesMouseExited

    private void tablasRelacionalesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablasRelacionalesMouseClicked

        
       ventanaMarca = new  DatosMarcaProducto();
       ventanaProducto.dispose();
       ventanaMarca.setVisible(true);
       panelGeneral.add(ventanaMarca);
       panelSecundario.setVisible(false);
       this.setVisible(false);
       
    }//GEN-LAST:event_tablasRelacionalesMouseClicked
    
    private void limpiarDatosPersona(){
        
        txtNombreProducto.setText("");
        txtDescripcionUnidad.setText("");
        txtDescripcionProductoGeneral.setText("");
        txtStockProducto.setText("");
        txtPrecioProducto.setText("");
        txtImagenProducto.setText("");
        cbbIdMarcaProducto.setSelectedIndex(0);
        
    }
    
        
    private Producto obtenerProducto (){
        
       
//      conversion de Text a number
        String precioProducto = txtPrecioProducto.getText();
        float  precioFinalP = Float.parseFloat(precioProducto);
        String cantidadS = txtStockProducto.getText();
        int cantidadProductoF = Integer.parseInt(cantidadS);
        
        // LO COMBINIENTE PARA INSERTAR DATOS Y TRAER DATOS DE UN Jcombo BOX Se hace por medio de LOS OBJECTOS QUE ES LO MAS RECOMENDABLE Y NO COMO YO LO HIZE ANQUE TAMBIEN FUNCIONA 
        
        String idCBB = (String) cbbIdMarcaProducto.getSelectedItem(); // se obtiene la cadena selecionada ej : 2.proveedor 
        
//        int primerCaracterID = Character.getNumericValue(idCBB.charAt(0));// se toma el primer carater de la cadena para poder asignarlo al momento de enviar los datos a traves de la consulta pero de esta manera no funciona porque si tenemos 124 solo tomara el 1 entoces necesitamos un metodo que tome toda la cadena de numeros osea 124

          // para sulucionar el anterior error se hace esta manera para extraer los numeros de una cadena : 
                //Puedes llamar repetidamente a find() para encontrar todas las coincidencias en la cadena.

                //Después de cada llamada exitosa a find(), puedes usar group() para obtener el valor coincidente.

                //Si no encuentra más coincidencias, find() devuelve false.
//
            Pattern pattern = Pattern.compile("\\d+"); // Expresión regular para encontrar uno o más dígitos
            Matcher matcher = pattern.matcher(idCBB);



           while (matcher.find()) {// mientras haiga una coincidencia osea numeros

               String numeroFinal = matcher.group();
               System.out.println("Valor numérico encontrado: " + numeroFinal);
               primerCaracterID = (int) Integer.parseInt(numeroFinal);
           }






        Producto elProducto = new Producto();
        elProducto.setIdProducto((Integer)spinnerId.getValue());
        elProducto.setNombreProducto(txtNombreProducto.getText());
        elProducto.setDescripcionUnidad(txtDescripcionUnidad.getText());
        elProducto.setDescripcionProductoGeneral(txtDescripcionProductoGeneral.getText());
        elProducto.setStockProducto(cantidadProductoF);
        elProducto.setPrecioProducto(precioFinalP);
        elProducto.setImagenProducto(txtImagenProducto.getText());
        elProducto.setIdMarcaProducto(primerCaracterID);
        
        System.out.println((int) idCBB.charAt(0)+" soy el id del combo box selecionado de producto");
        // aca se debe mirar el jCombo box porque acuerdese que se le agrego dos datos en una opcion , tomar el primer dato que seria el numero y si es necesario convertirlo y ya
//        System.out.println((int) a.charAt()+" soy yo "); // .charAt(0)
        

        
        return (elProducto);
    }
    
     
    private void llenarTablaProducto(){ // cambiar
        
        Producto unProducto = new Producto();
        tabla = (DefaultTableModel)tablaDatosProducto.getModel();
        tabla.setRowCount(0); // limpiar las filas de las columnas 
        Iterator<Producto> itProducto = unProducto.Listar();
        Object[] filaProducto = new Object[8];
        
        while (itProducto.hasNext()) {
            
            unProducto = itProducto.next();
            filaProducto[0] = unProducto.getIdProducto();
            filaProducto[1] = unProducto.getNombreProducto();
            filaProducto[2] = unProducto.getDescripcionUnidad();
            filaProducto[3] = unProducto.getDescripcionProductoGeneral();
            filaProducto[4] = unProducto.getStockProducto();
            filaProducto[5] = unProducto.getPrecioProducto();
            filaProducto[6] = unProducto.getImagenProducto();
            filaProducto[7] = unProducto.getIdMarcaProducto();
            
            tabla.addRow(filaProducto);
          
        }
    }
    
    private void llenarTablaConBusqueda(String busqueda){
        
        Producto unProducto =new Producto();
        DefaultTableModel tabla = (DefaultTableModel)tablaDatosProducto.getModel();
        Iterator<Producto> itProducto = unProducto.buscar(busqueda);
        Object[] filaProducto = new Object [8];
        
        tabla.setRowCount(0); // es para limpiar la tabla 
        
        while (itProducto.hasNext()){
            
            unProducto = itProducto.next();
            filaProducto[0] = unProducto.getIdProducto();
            filaProducto[1] = unProducto.getNombreProducto();
            filaProducto[2] = unProducto.getDescripcionUnidad();
            filaProducto[3] = unProducto.getDescripcionProductoGeneral();
            filaProducto[4] = unProducto.getStockProducto();
            filaProducto[5] = unProducto.getPrecioProducto();
            filaProducto[6] = unProducto.getImagenProducto();
            filaProducto[7] = unProducto.getIdMarcaProducto();
            
            tabla.addRow(filaProducto);
        
        }
     }
    
   
        
////      PENDIENTE  
    
//     cuando valla a crear la otra tabla de varias imagenes osea hacer normalizacion, esa tabla se le tienen que insertan los datos automaticamente solos osea que si se inserto un nuevo producto
//     obligatoriamente agreguele la consulta para que lo inserte en la otra tabla 
//    // si la tabla no se deja agregar el combo Box, solo agreguelo al final de los datos que se le hace el crud y fin de historia creeria que quederia mejor 
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnInsertar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox<String> cbbIdMarcaProducto;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel labelFarmacit;
    private javax.swing.JPanel panelProducto;
    private javax.swing.JSpinner spinnerId;
    private javax.swing.JTable tablaDatosProducto;
    private javax.swing.JLabel tablasRelacionales;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtDescripcionProductoGeneral;
    private javax.swing.JTextField txtDescripcionUnidad;
    private javax.swing.JTextField txtImagenProducto;
    private javax.swing.JTextField txtNombreProducto;
    private javax.swing.JTextField txtPrecioProducto;
    private javax.swing.JTextField txtStockProducto;
    private javax.swing.JLabel vSuperOfertas;
    // End of variables declaration//GEN-END:variables
}
